---
layout: default
title: 远程屏幕体验
permalink: /zh-cn/win10/RemoteDisplay.htm
lang: zh-CN
deviceName: Remote Display Experience
---
<div class="row">
  <div class="col-xs-24">
    <ol class="breadcrumb">
      <li><a href="https://developer.microsoft.com/zh-cn/windows/iot">IoT 主页</a></li>
      <li><a href="{{site.baseurl}}/{{page.lang}}/GetStarted.htm">入门</a></li>
      <li class="active">远程屏幕体验</li>
    </ol>
    <header class="page-title-header">
      <h1 class="page-title">远程屏幕体验</h1>
      <h2 class="page-subtitle">从 Windows 10 台式电脑、平板电脑或手机远程查看和控制你的 Windows 10 IoT 核心版 UWP 应用程序。</h2>
    </header>
  </div>
</div>

<h2>概述<span class="pull-right"><a id="overview-toggle" class="toggle-button" onClick="hideDiv('overview')">隐藏</a></span></h2>
<hr/>
<div id="overview" class="toggle-section">
  <div class="row">
    <div class="col-xs-24 col-no-padding">
      <p>远程屏幕体验是用于远程控制在 Windows 10 IoT 核心版设备上运行的 UWP 应用程序的技术。 可以从任何 Windows 10 台式电脑、平板电脑或手机建立远程控制，从而为每台无屏幕设备提供屏幕体验。</p>
      <p> 若要查看该技术实际应用的示例，请观看此 <a href="https://www.youtube.com/watch?v=p4vw3taOVyM" target="_blank">YouTube 视频</a>。 在后半部分，演示者使用平板电脑远程控制 Windows 10 IoT 核心版设备，同时使用触摸和加速计来控制系统。</p>
      <p><img alt="远程屏幕体验" src="{{site.baseurl}}/Resources/images/remote-display-experience.png"></p>
      <p>用户通过所选 Windows 10 配套设备上安装的 Microsoft 官方商城应用程序连接到他们的 Windows 10 IoT 核心版设备。 由运行在 Windows 10 IoT 核心版设备上的 UWP 应用程序生成的 UI 将远程传输到配套设备的屏幕，而输入和传感器数据将以相反方向进行发送。</p>
      <p>该功能易于使用，并且是 Windows 10 IoT 核心版的最新预览体验版本上的自带功能。 下面来了解如何使用它。</p>
      <p><img alt="远程屏幕体验" src="{{site.baseurl}}/Resources/images/architecture-graphic.png"></p>
    </div>
  </div>
</div>
<br/>

<h2>设置<span class="pull-right"><a id="setup-toggle" class="toggle-button" onClick="hideDiv('setup')">隐藏</a></span></h2>
<hr/>
<div id="setup" class="toggle-section">
  <div class="row">
    <div class="col-xs-24 col-no-padding">
      <p>若要开始使用，你将需要使用 Windows 10 的最新预览体验版本（操作系统版本 10.0.14295.1000）设置 Windows 10 IoT 核心版设备，请访问<a href="{{site.baseurl}}/{{page.lang}}/GetStarted.htm">入门</a>页面以设置你的开发板。</p>
      <p>设置十分便捷，按照下面三个步骤操作即可使用远程屏幕技术。</p>
      <p><b>1.在 Windows 10 IoT 核心版设备上打开远程屏幕功能。</b></p>
			<p>只要拥有运行 Windows 10 IoT 核心版的最新预览体验版本的开发板，你几乎就已经做好使用远程屏幕体验的准备。</p>
			<p>首先，将你的设备通过以太网或 WLAN 连接到 Internet。将屏幕连接到 Windows 10 IoT 核心版设备，然后找到右侧所示的 IP 地址。</p>
      <p><img alt="默认 IP" src="{{site.baseurl}}/Resources/images/default-ip.png"></p>
      <p>在与你的 IoT 设备处于同一个网络的电脑上，转到 Web 浏览器并导航到“http://{IP address}:8080”。 你将需要输入 Windows 10 IoT 核心版设备的名称和密码才能访问此站点（对于新设备，分别为“Administrator”和“p@ssw0rd”）。</p>
			<p>从左侧的选项中选择“远程”页面，然后选中标记为“启用 Window IoT 远程服务器”的复选框。 你的设备现在已经可以支持远程屏幕体验。</p>
      <p> <img alt="启用远程屏幕体验" src="{{site.baseurl}}/Resources/images/enable-remote.png"></p>
      <br/>
      <p><b>2.在你的配套 Windows 10 设备上安装 Windows IoT 远程客户端。</b></p>
			<p>若要支持将 Windows 10 设备连接到 Windows 10 IoT 核心版设备，你需要安装我们的官方商城应用程序。 Windows IoT 远程客户端应用当前仅通过链接提供，可在<a href="https://www.microsoft.com/zh-cn/store/apps/iot-remote-client/9nblggh5mnxz">此处</a>找到它。</p>
      <p><img alt="安装客户端应用" src="{{site.baseurl}}/Resources/images/store-app.png"></p>
      <br/>
      <p><b>3.通过已安装的应用程序连接到 Windows 10 IoT 核心版设备。</b></p>
			<p>在 Windows 10 配套设备上运行 Windows IoT 远程客户端应用程序。 在“连接”屏幕上，输入设备的 IP 地址。 两台设备应连接起来，从而将 Windows 10 IoT 核心版设备的 UI 体验远程传输到配套设备。</p>
			<p>现在已连接！ 从此时开始，配套 Windows 10 设备上的触摸和单击输入可用于控制 Windows 10 IoT 核心版 UWP 应用程序。 此外，你可以使用已连接配套设备的加速计数据。</p>
      <p><img alt="连接设备" src="{{site.baseurl}}/Resources/images/connect-device.png"></p>
    </div>
  </div>
</div>
<br/>

<h2>远程传感器<span class="pull-right"><a id="sensors-toggle" class="toggle-button" onClick="hideDiv('sensors')">隐藏</a></span></h2>
<hr>
<div id="sensors" class="toggle-section">
  <div class="row">
    <div class="col-xs-24 col-no-padding">
      <p>远程屏幕体验不仅是在任何无屏幕设备上呈现屏幕内容的强大工具，同时还提供在 Windows 10 IoT 核心版应用程序中使用远程传感器的功能。 如果你在将 Windows 10 平板电脑或手机作为配套设备时遵循上述设置，则可以使用已连接设备中的加速计来作为 IoT 核心版项目中的传感器。</p>
      <p> 若要了解实际应用的远程传感器，请再次观看此 <a href="https://www.youtube.com/watch?v=p4vw3taOVyM" target="_blank">YouTube 视频</a>。 在后半部分，演示者使用平板电脑远程控制 Windows 10 IoT 核心版设备，同时使用触摸和加速计来控制系统。</p>
			<p>使用远程传感器的代码很简单，<b>事实上，它与实现本地传感器使用的代码完全相同。</b></p>
      <p><img alt="远程屏幕体验" src="{{site.baseurl}}/Resources/images/remote-tablet.png"></p>
      <p>在 Windows 10 IoT 核心版设备上的 UWP 应用程序中，Accelerometer 类的 GetDefault() 函数将搜索已连接配套设备上的远程加速计。</p>
			<p>查看此篇 <a href="https://www.hackster.io/windows-iot/closed-loop-control-remote-sensors-and-remote-ux-on-rpi3-ef3ed0" target="_blank">Hackster.io</a> 文章来深入研究使用远程传感器的演示。 请参考此 <a href="https://github.com/ms-iot/pid-control-system/blob/master/DemoApp/MainPage.xaml.cs" target="_blank">GitHub 代码页</a>上的加速计实现以将远程传感器集成到你自己的项目中。</p>
      <p><img alt="加速计代码" src="{{site.baseurl}}/Resources/images/accelerometer-code.png"></p>
    </div>
  </div>
</div>
<br/>

<h2>兼容性和范围<span class="pull-right"><a id="compatible-toggle" class="toggle-button" onClick="hideDiv('compatible')">隐藏</a></span></h2>
<hr/>
<div id="compatible" class="toggle-section">
  <div class="row">
    <div class="col-xs-24 col-no-padding">
      <p> 远程屏幕体验当前适用于 Raspberry Pi 2 和 3、Minnowboard Max 以及 Dragonboard。 这些开发板必须运行 Windows 10 IoT 核心版的最新预览体验版本（操作系统版本 10.0.14295.1000）。</p>
			<p> <b>远程屏幕和传感器功能是“Alpha”或“预览体验成员”技术。</b> 虽然它仍处于早期阶段，但可充当在任何无屏幕设备上提供屏幕体验的有用工具。</p>
      <p><img alt="兼容开发板" src="{{site.baseurl}}/Resources/images/compatible-boards.png"></p>
    </div>
  </div>
</div>
<br/>

<h2>疑难解答<span class="pull-right"><a id="troubleshooting-toggle" class="toggle-button" onClick="hideDiv('troubleshooting')">隐藏</a></span></h2>
<hr>
<div id="troubleshooting" class="toggle-section">
<p>使用远程屏幕技术快速而简单，但用户可能仍然会遇到一些问题。 请确保严格按照上述设置说明进行操作，如果问题仍然存在，请检查以下事项。</p>
<h4><b>当我尝试连接时，客户端应用转到白屏。</b></h4>
<p>许多问题都可能导致连接失败，但我们遇到过一些较常见的问题：</p>
<p><b>1.</b> 首先，确保你的 IoT 设备与你的配套设备处于同一个网络中。 检查你是否运行的是 Windows 10 IoT 核心版的最新预览体验版本，并且启用了 Windows IoT 远程服务器。</p>
<p><b>2.</b> 如果问题不在于此，请尝试将设备的分辨率更改为我们保证支持的分辨率。为此，请按照上述“设置”部分的步骤 1 中的说明导航到设备的 Web 服务器。 停留在“主页”页面上并向下滚动以查找分辨率，而不是从左侧的菜单中选择“远程”。 尝试使用 800x600。</p>
<p><b>3.</b> 如果这仍未解决你的问题，你遇到的问题则可能是因为从未将设备连接到外部屏幕。 这将导致设备将自己视为完全无外设的设备。 若要解决此问题，请执行以下操作：
<ul>
  <li>
  弹出 MicroSD 卡，将其放入计算机
  </li>
  <li>
  编辑 <MicroSD card drive>:\config.txt
  </li>
  <li>
  添加以下行：
  </li>
</ul>
{% highlight XML %}
hdmi_force_hotplug=1
hdmi_group=2
hdmi_mode=9
{% endhighlight %}
</p>
<h4><b>Raspberry Pi 2 上的性能较低。</b></h4>
<p>Raspberry Pi 2 在 Windows 10 IoT 核心版上没有 GPU 支持，因此远程屏幕体验的帧速率低于其他开发板。 Raspberry Pi 3 上经过增强的 CPU 以及 MBM 和 Dragonboard 上的图形功能可实现更稳定的体验。 将分辨率降低到 800x600 可提高性能。</p>
</div>
<br>

<script>
  function hideDiv(div) {
        var pdiv = "#" + div,
            button = pdiv + "-toggle"

        if ($(pdiv).css('display') == 'none') {
            $(pdiv).toggle('slow');
            $(button).html('Hide');
        }
        else {
            $(pdiv).toggle('slow');
            $(button).html('Show');
        }
    }
</script>
