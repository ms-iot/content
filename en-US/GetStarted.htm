---
layout: default
title: Get Started
permalink: /en-US/GetStarted.htm
lang: en-US
---
<ol class="breadcrumb">
  <li>
    <a href="https://dev.windows.com/en-us/iot">IoT Home</a>
  </li>
  <li class="active">Get Started</li>
</ol>
<h1 class="page-title">Get Started with Windows IoT </h1>
<div class="row">
  <div class="col-md-6 col-sm-12 col-no-padding">
    <h2 class="subtext">Follow the instructions below to set up or select a board, set up your development environment and get started writing your first app. </h2>
  </div>
</div>
<h2>Set up your PC <span class="pull-right"><a id="pc-content-toggle" class="toggle-button" onClick="hideDiv('pc-content')">Hide</a></span></h2>

<hr>
<div id="pc-content" class="toggle-section">
{% include_relative SetupPCContent.md %}
</div>

<h2>Set up a Windows 10 IoT Core Device</h2>
<hr>
<div class="row">
  <div class="col-md-7 col-sm-12 col-no-padding">
    <p>If you have a Raspberry Pi 2 or a MinnowBoard MAX, you can setup and configure it easily using the Windows 10 IoT Core Dashboard. The dashboard can be used to set up on the RTM (public) version of Windows 10 IoT Core and requires a PC running Windows 10.</p>
    <p>Please make sure you are running the latest public release of Windows 10 or a Windows 10 Insider Preview. If you aren't, you can upgrade from <a href="http://www.microsoft.com/en-us/software-download/windows10ISO">here</a>.</p>
    <a href="http://go.microsoft.com/fwlink/?LinkID=708576" id="device-center-link" class="button-blue button-flat">Get the Windows 10 IoT Core Dashboard</a>
    <p> By downloading and using the Windows 10 IoT Core Dashboard you agree to the <a href="http://go.microsoft.com/fwlink/?LinkID=703960&clcid=0x4809"> license terms </a> and <a href="http://go.microsoft.com/fwlink/?LinkId=521839"> privacy statement </a> for Windows 10 IoT Core Dashboard. </p>
    <p> <a href="{{site.baseurl}}/{{page.lang}}/win10/IoTDashboardTroubleshooting.htm">Need help? Check out the troubleshooting page.</a></p>
    <p> The Dragonboard 410c is not supported by the dashboard, and can be configured using the instructions below. You can also follow the instructions below for detailed setup instructions for each device, without using the dashboard. </p>
    <p> <a href="{{site.baseurl}}/{{page.lang}}/win10/RPI.htm">Steps to set up Raspberry Pi 2</a></p>
    <p> <a href="{{site.baseurl}}/{{page.lang}}/win10/MBM.htm">Steps to set up MinnowBoard MAX</a></p>
    <p> <a href="{{site.baseurl}}/{{page.lang}}/win10/DB410c.htm">Steps to set up DragonBoard 410c</a></p>
  </div>
  <div class="col-md-5 col-sm-12">
    <img alt=”dashboard for windows 10 iot core” src="{{site.baseurl}}/images/DeviceCenter.png">
  </div>
</div>
<h2> Need help choosing a board? </h2>
<hr>
<p>Many boards run Windows 10 IoT Core. Compare the features to understand which board meets your needs.</p>
<p><a href="{{site.baseurl}}/{{page.lang}}/BoardComparison.htm">Help me choose a board.</a></p>
<br>
<h2> Arduino and Windows 10</h2>
<hr>
<p> Arduino and Windows 10 work together to help you make amazing projects - get started by clicking one of the links below. Our technologies support the Arduino Uno and Mega, as well as the new Arduino 101.</p>
<div class="row">
  <div class="col-md-4 col-sm-12">
    <a href="{{site.baseurl}}/{{page.lang}}/win10/Lightning.htm"><img alt=”arduino wiring” src="{{site.baseurl}}/images/devices/Lighning_0.png"></a>
    <h3>Arduino Wiring and UWP Lightning Providers</h3>
    <p> To enable the use of existing Arduino Wiring sketches on IoT Core devices, a project template for Arduino Wiring can now be used in Visual Studio. These projects make use of a direct memory mapped driver that offers high performance. Additionally, based on the same driver, a set of controller providers can be used in UWP apps to access GPIO, I2C and SPI controllers that offer high performance. </p>
    <p><a href="{{site.baseurl}}/{{page.lang}}/win10/Lightning.htm">Get started using Arduino Wiring</a></p>
  </div>
  <div class="col-md-4 col-sm-12">
    <a href="{{site.baseurl}}/{{page.lang}}/win10/WRA.htm"><img alt=”windows remote arduino” src="{{site.baseurl}}/images/devices/WindowsPhone_0.png"></a>
    <h3>Windows Remote Arduino</h3>
    <p> Windows Remote Arduino is an open-source Windows Runtime library which allows Makers to control an Arduino through a Bluetooth, USB, Wi-Fi, or Ethernet connection. It enables developers to include Arduino sensors in their Windows projects, or even offload computationally expensive work from an Arduino to Windows. The Windows Remote Arduino library can be used with any WinRT languages (C++/CX, C# and JavaScript). </p>
    <p><a href="{{site.baseurl}}/{{page.lang}}/win10/WRALanding.htm">Get started using Windows Remote Arduino</a></p>
    <p><a href="https://github.com/ms-iot/remote-wiring" target="_blank">View Windows Remote Arduino on GitHub</a></p>
    <p><a href="http://store-usa.arduino.cc/" target="_blank">Buy an Arduino</a></p>
  </div>
  <div class="col-md-4 col-sm-12">
    <a href="{{site.baseurl}}/{{page.lang}}/win10/WVSA.htm"><img alt=”virtual shields for arduino” src="{{site.baseurl}}/images/devices/Arduino_1.png"></a>
    <h3>Windows Virtual Shields for Arduino</h3></a>
    <p> Windows Virtual Shields for Arduino is an open-source library primarily for the Arduino UNO which communicates with an open-source Universal Windows application running on all Windows 10 devices, including Windows Lumia phones. The library exposes Lumia phones' sensors and capabilities to the an Arduino Wiring Sketch. </p>
    <p><a href="{{site.baseurl}}/{{page.lang}}/win10/WVSA.htm">Get started using Windows Virtual Shield for Arduino</a></p>
    <p><a href="https://github.com/ms-iot/virtual-shields-arduino" target="_blank">View Windows Virtual Shield for Arduino on GitHub</a></p>
    <p><a href="http://store-usa.arduino.cc/" target="_blank">Buy an Arduino</a></p>
  </div>
</div>

<script>
  function hideDiv(div) {
    var div = "#" + div,
        button = div + "-toggle",
        currentState = $(button)[0].innerHTML;

    $(button)[0].innerHTML = "Show";

    if(currentState === "Hide") {
      $(div).toggle('slow');
    }
    else
    {
      $(".hidden").removeClass("hidden");
      $(".toggle-section").hide();
      $(div).toggle('slow');
      $(button)[0].innerHTML = "Hide";
    }
  }
</script>






