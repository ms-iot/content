---
layout: getstarted-steps-commercialize
title: Windows 10 IoT Core Official Website | Developer Resource
description: Windows 10 IoT Core for your Internet of Things. 
keyword: windows iot, get started, retail image, OEMFM, retail build, iot
permalink: /en-US/GetStarted/Commercialize/BuildRetailImage.htm
lang: en-US
---

<header>
    <h1  class="c-subheading-1">Build your retail image</h1>
    <p class="c-paragraph-3">With the customizations you've added, it's time to put them together and test them in a retail build.</p>
</header>

<section class="pad-thin">
    <h3 class="c-subheading-3">1. Add your app to the retail configuration file</h3>
    <p class="c-paragraph-3">Open your product's retail configuration file.</p>
    <blockquote class="c-blockquote">
        <p class="c-paragraph"><xmp>C:\IoT-ADK-AddonKit\Source-<arch>\Products\ProductA\RetailOEMInput.xml</xmp></p>
    </blockquote>  
    <p class="c-paragraph-3">Add your feature manifest, OEMFM.xml, into the list of Additional FMs. At the same time, add the feature
    manifest, OEMCommonFM.xml, which contains the OEM_CustomCmd package that configures your app on the first boot:</p>
    <blockquote class="c-blockquote">
    <xmp>
<AdditionalFMs>
  <!-- Including BSP feature manifest -->
  <AdditionalFM>%BLD_DIR%\MergedFMs\RPi2FM.xml</AdditionalFM>
  <!-- Including OEM feature manifest -->
  <AdditionalFM>%BLD_DIR%\MergedFMs\OEMCommonFM.xml</AdditionalFM>
  <AdditionalFM>%BLD_DIR%\MergedFMs\OEMFM.xml</AdditionalFM>
</AdditionalFMs>
    </xmp>
    </blockquote>  

    <p class="c-paragraph-3">Add the FeatureIDs for your app package and the OEM_CustomCmd package.</p>
    <blockquote class="c-blockquote">
    <xmp>
<OEM> 
   <!-- Include BSP Features -->
   <Feature>RPI2_DRIVERS</Feature> 
   <Feature>RPI3_DRIVERS</Feature>
   <!-- Include OEM features -->
   <Feature>OEM_CustomCmd</Feature> 
   <Feature>OEM_ProvAuto</Feature>
   <Feature>OEM_MyUWPApp</Feature>
   <Feature>OEM_FilesAndRegKeys</Feature>
   <Feature>OEM_DriverHelloBlinky</Feature> 
</OEM>
                </xmp>
    </blockquote>  
    <p class="c-paragraph-3">OEM_ProvAuto is required to pull in the provisioning package.</p>
    <p class="c-paragraph-3">OEM_FilesAndRegKeys, OEM_MyUWPApp, and OEM_DriverHelloBlinky were sample packages added in labs 
        from the IoT Core manufacturing guide.</p>
</section>

<section class="pad-thin">
    <h3 class="c-subheading-3">2. Copy in the provisioning package from ProductB into ProductA.</h3>
    <p class="c-paragraph-3">Copy the customizations.xml file from C:\IoT-ADK-AddonKit\Products\ProductB\prov to C:\IoT-ADK-AddonKit\
        Products\ProductA\prov. Delete the ProductAProv.ppkg file if present.</p>
</section>

<section class="pad-thin">
    <h3 class="c-subheading-3">3. Build and create the image.</h3>
    <p class="c-paragraph-3">Get a <a class="c-hyperlink" href="https://docs.microsoft.com/en-us/windows-hardware/drivers/dashboard/update-a-code-signing-certificate" target="_blank">code-signing certificate</a>. 
    Configure the cross-signing certificate to be used for retail signing. Edit setsignature.cmd file to set SIGNTOOL_OEM_SIGN:</p>
    
    <blockquote class="c-blockquote"><xmp>set SIGNTOOL_OEM_SIGN=/s my /i "Issuer" /n "Subject" /ac "CrossCertRoot" /fd SHA256</xmp></blockquote>  
    
            <ul class="c-list">
                    <li>Issuer: Issuer of the certificate (see Certificate -> Details -> Issuer).</li>
                    <li>Subject: Subject in the certificate (see Certificate -> Details -> Subject).</li>
                    <li>crossCertRoot: Microsoft-supplied Cross Certificate Root. Learn more <a class="c-hyperlink" href="https://docs.microsoft.com/en-us/windows-hardware/drivers/install/cross-certificates-for-kernel-mode-code-signing#cross-certificate-list" target="_blank">here</a>.
            </ul>

    <p class="c-paragraph-3">From the IoT Core Shell, enable retail signing.</p>
    
    <blockquote class="c-blockquote"><xmp>set SIGNTOOL_OEM_SIGN=/s my /i "Issuer" /n "Subject" /ac "CrossCertRoot" /fd SHA256</xmp></blockquote>  

    <p class="c-paragraph-3">Rebuild all the packages so that they are retail signed.</p>
    
    <blockquote class="c-blockquote"><xmp>buildpkg all</xmp></blockquote>  

    <p class="c-paragraph-3">If the BSP drivers/packages are test-signed, you need to rebuild them to have a retail signature. You can
    re-sign the cabs and its contents using:</p>
    
    <blockquote class="c-blockquote"><xmp>buildimage ProductA Retail</xmp> </blockquote>  
    
    <p class="c-paragraph-3">This creates the product binaries at C:\IoT-ADK-AddonKit\Build\<arch>\ProductA\Retail\Flash.FFU.</p>


    <p class="c-paragraph-3">Start <b>Windows IoT Core Dashboard -> Setup a new device -> Custom</b>, and browse to your image.
        Put the Micro SD card in the device, select it, accept the terms, and click <b>Install</b>. This replaces the previous image
         with your new image.</p>
    
        <p class="c-paragraph-3">Put the card into the IoT device and start it up. After a short while, the device should start automatically,
         and you should see your app.</p>
    
        <p class="c-paragraph-3">With retail builds, you won't be able to log into the device using the SSH clients or by using the
        web interface. However, any files and reg keys that your app relies on should still work.</p>

    <p class="c-paragraph-3">In order to take your device to market, you'll need to agree to the terms and conditions associated with Windows 10 IoT Core.</p>

    </section>

<section data-grid="col-12" class="pad-thin">
    <div data-grid="col-4">
        <a class="c-action-trigger c-glyph glyph-chevron-left" href="{{site.baseurl}}/{{page.lang}}/GetStarted/Commercialize/BuildImage.htm">Previous: Build your image</a>
    </div>
    <div data-grid="col-6"></div>
    <div data-grid="col-2">
        <a class="c-action-trigger c-glyph-after glyph-chevron-right" href="{{site.baseurl}}/{{page.lang}}/GetStarted/Commercialize/CommercialTerms.htm">Next: Register your device</a>
    </div>
</section>
